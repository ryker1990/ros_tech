/*! rosin-device-backend 2018-11-26 */

"use strict";var n=function(){function o(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(e,t,n){return t&&o(e.prototype,t),n&&o(e,n),e}}(),e=require("./Constants"),a=E(e),t=require("./Config"),o=E(t),i=require("events"),s=E(i),c=require("socket.io"),r=E(c),l=require("wifi-control"),S=E(l),u=require("./commons/dispatch");function E(e){return e&&e.__esModule?e:{default:e}}function T(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function d(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}var f=function(e){function t(){T(this,t);var e=_(this,(t.__proto__||Object.getPrototypeOf(t)).call(this));return e.start=e.start.bind(e),e.onConnect=e.onConnect.bind(e),e.onSwitchRelay=e.onSwitchRelay.bind(e),e.onSavePreset=e.onSavePreset.bind(e),e.onDeletePreset=e.onDeletePreset.bind(e),e.onSelectPreset=e.onSelectPreset.bind(e),e.onStartPress=e.onStartPress.bind(e),e.onCancelPress=e.onCancelPress.bind(e),e.onSaveYield=e.onSaveYield.bind(e),e.onSetTopTemp=e.onSetTopTemp.bind(e),e.onSetBottomTemp=e.onSetBottomTemp.bind(e),e.onSetTime=e.onSetTime.bind(e),e.onConfirmCancel=e.onConfirmCancel.bind(e),e.onSessionState=e.onSessionState.bind(e),e.onNetworkScan=e.onNetworkScan.bind(e),e.onNetworkState=e.onNetworkState.bind(e),e.onNetworkConnect=e.onNetworkConnect.bind(e),e.onNetworkDisconnect=e.onNetworkDisconnect.bind(e),e.onGetPresses=e.onGetPresses.bind(e),e.onExportHistory=e.onExportHistory.bind(e),e.onClearExport=e.onClearExport.bind(e),e.setDeviceUiSettings=e.setDeviceUiSettings.bind(e),e.dispatch=e.dispatch.bind(e),e.database=null,e.name="Socket server",e.batcher=null,e.clients=[],e.socket=(0,r.default)(),e.socket.on("connection",e.onConnect),e}return d(t,s.default),n(t,[{key:"start",value:function(){var t=this;return new Promise(function(e){console.log("Starting socket server on port 3001"),t.socket.listen(3001),e()})}},{key:"onConnect",value:function(e){console.log("Client with ID: "+e.id+" connected."),S.default.init({debug:!0}),e.on(u.MSG_SWITCH_RELAY,this.onSwitchRelay),e.on(u.MSG_SAVE_PRESET,this.onSavePreset),e.on(u.MSG_DELETE_PRESET,this.onDeletePreset),e.on(u.MSG_SELECT_PRESET,this.onSelectPreset),e.on(u.MSG_START_PRESS,this.onStartPress),e.on(u.MSG_CANCEL_PRESS,this.onCancelPress),e.on(u.MSG_SAVE_YIELD,this.onSaveYield),e.on(u.MSG_SET_TOP_TEMP,this.onSetTopTemp),e.on(u.MSG_SET_BOTTOM_TEMP,this.onSetBottomTemp),e.on(u.MSG_SET_TIME,this.onSetTime),e.on(u.MSG_CONFIG_CANCEL,this.onConfirmCancel),e.on(u.MSG_NETWORK_CONNECT,this.onNetworkConnect),e.on(u.MSG_NETWORK_DISCONNECT,this.onNetworkDisconnect),e.on(u.MSG_NETWORK_SCAN,this.onNetworkScan),e.on(u.MSG_NETWORK_STATE,this.onNetworkState),e.on(u.MSG_GET_PRESSES,this.onGetPresses),e.on(u.MSG_EXPORT_HISTORY,this.onExportHistory),e.on(u.MSG_CLEAR_EXPORT,this.onClearExport),e.on(u.MSG_SAVE_CURRENT_SESSION,this.onSessionState),e.on("updateDeviceUiSettings",this.setDeviceUiSettings),e.on("disconnect",this.onDisconnect.bind({clients:this.clients,client:e})),-1===this.clients.indexOf(e)&&(console.log("Adding connected client."),this.clients.push(e)),this.dispatch("updateConfig",o.default),this.emit(a.default.CLIENT_CONNECTED,e)}},{key:"onDisconnect",value:function(){var e=this.client,t=this.clients;console.log("Client with ID "+e.id+" disconnected.");var n=t.indexOf(e);-1!==t.indexOf(e)&&(console.log("Removing disconnected client."),t.splice(n,1))}},{key:"onConfirmCancel",value:function(){this.emit(a.default.F_CONFIRM_CANCEL)}},{key:"onSetTopTemp",value:function(e){this.emit(a.default.F_SET_TOP_TEMP,e)}},{key:"onSetBottomTemp",value:function(e){this.emit(a.default.F_SET_BOTTOM_TEMP,e)}},{key:"onSetTime",value:function(e){this.emit(a.default.F_SET_TIME,e)}},{key:"onSaveYield",value:function(e,t){this.emit(a.default.F_SAVE_YIELD,e,t)}},{key:"onStartPress",value:function(e,t,n){this.emit(a.default.F_START_PRESS,e,t,n)}},{key:"onCancelPress",value:function(){this.emit(a.default.F_CANCEL_PRESS)}},{key:"onSwitchRelay",value:function(e,t){this.emit(a.default.F_SWITCH_RELAY,e,t)}},{key:"onSavePreset",value:function(e,t,n,o,i,s,c){console.log(e,t,n,o,i,s,c),this.emit(a.default.F_SAVE_PRESET,e,t,n,o,i,s,c)}},{key:"onDeletePreset",value:function(e){this.emit(a.default.F_DELETE_PRESET,e)}},{key:"onSelectPreset",value:function(e){this.emit(a.default.F_SELECT_PRESET,e)}},{key:"onSessionState",value:function(e){this.emit(a.default.F_SAVE_CURRENT_SESSION,e)}},{key:"onGetPresses",value:function(){this.emit(a.default.F_GET_PRESSES)}},{key:"onExportHistory",value:function(e){this.emit(a.default.F_EXPORT_HISTORY,e)}},{key:"onClearExport",value:function(){this.emit(a.default.F_CLEAR_EXPORT)}},{key:"onNetworkScan",value:function(){var o=this;S.default.scanForWiFi(function(e,t){var n=void 0;n=null!==e?(console.log(e),[]):t.networks,o.dispatch(u.MSG_NETWORK_SCAN_RESULT,n)})}},{key:"onNetworkState",value:function(){var e=S.default.getIfaceState(),t=e&&"connected"===e.connection?u.NETWORK_STATE_CONNECTED:u.NETWORK_STATE_DISCONNECTED,n=e.ssid;this.dispatch(u.MSG_NETWORK_STATE_RESULT,{state:t,ssid:n})}},{key:"onNetworkConnect",value:function(n,e){var o=this;this.dispatch(u.MSG_NETWORK_STATE_RESULT,{state:u.NETWORK_STATE_CONNECTING}),S.default.connectToAP({ssid:n,password:e},function(e,t){e?(console.log("WiFi connection callback error."),o.dispatch(u.MSG_NETWORK_STATE_RESULT,{state:u.NETWORK_STATE_DISCONNECTED})):(console.log("WiFi connection callback success."),console.log(t),o.database.setWifiSetup(),o.dispatch(u.MSG_NETWORK_STATE_RESULT,{state:u.NETWORK_STATE_CONNECTED,ssid:n}))})}},{key:"onNetworkDisconnect",value:function(){console.log("Attempting to disconnect from network");var e=S.default.disconnect();e.success?(console.log("Successfully disconnected"),this.dispatch(u.MSG_NETWORK_STATE_RESULT,{state:u.NETWORK_STATE_DISCONNECTED})):console.log(e.msg)}},{key:"setDeviceUiSettings",value:function(e){this.database.updateDeviceUiSettings(e)}},{key:"updateClient",value:function(e,t){e.emit("updateAll",t)}},{key:"dispatch",value:function(e,t){for(var n in this.clients)this.clients[n].emit(e,t)}}]),t}();module.exports=f;
//# sourceMappingURL=../sourcemap/Server.js